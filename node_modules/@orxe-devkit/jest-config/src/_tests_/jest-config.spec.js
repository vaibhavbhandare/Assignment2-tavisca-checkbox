import { jestConfig } from '../index';

describe('Jest Config Fixtures', () => {
	let config;
	beforeAll(() => {
		config = jestConfig();
	});

	it('testing configurations - roots', () => {
		let roots = ['<rootDir>/src'];
		expect(config.roots).toStrictEqual(roots);
	});

	it('testing configurations - collectCoverageFrom', () => {
		let collectCoverageFrom = [
			'<rootDir>/src/**/*.{js,jsx,ts,tsx}',
			'!<rootDir>/src/**/*.d.ts',
			'!<rootDir>/src/**/*css.ts',
		];
		expect(config.collectCoverageFrom).toStrictEqual(collectCoverageFrom);
	});

	it('testing configurations - testMatch', () => {
		let testMatch = [
			'<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}',
			'<rootDir>/src/**/*.{spec,test,axe}.{js,jsx,ts,tsx}',
		];
		expect(config.testMatch).toStrictEqual(testMatch);
	});

	it('testing configurations - runner', () => {
		let runner = 'jest-runner';
		expect(config.runner).toStrictEqual(runner);
	});

	it('testing configurations - testEnvironment', () => {
		let testEnvironment = 'jest-environment-jsdom-sixteen';
		expect(config.testEnvironment).toStrictEqual(testEnvironment);
	});

	it('testing configurations - transform', () => {
		let transform = {
			'^.+\\.(js|jsx|ts|tsx)$': ['babel-jest', { rootMode: 'upward' }],
		};
		expect(config.transform).toStrictEqual(transform);
	});

	it('testing configurations - transformIgnorePatterns', () => {
		let transformIgnorePatterns = ['^.+\\.(css|sass|scss)$'];
		expect(config.transformIgnorePatterns).toStrictEqual(transformIgnorePatterns);
	});

	it('testing configurations - moduleNameMapper', () => {
		let moduleNameMapper = {
			'^.+\\.module\\.(css|sass|scss)$': 'identity-obj-proxy',
		};
		expect(config.moduleNameMapper).toStrictEqual(moduleNameMapper);
	});

	it('testing configurations - moduleFileExtensions', () => {
		let moduleFileExtensions = [
			'web.js',
			'js',
			'web.ts',
			'ts',
			'web.tsx',
			'tsx',
			'json',
			'web.jsx',
			'jsx',
			'node',
		];
		expect(config.moduleFileExtensions).toStrictEqual(moduleFileExtensions);
	});

	it('testing configurations - watchPlugins', () => {
		let watchPlugins = ['jest-watch-typeahead/filename', 'jest-watch-typeahead/testname'];
		expect(config.watchPlugins).toStrictEqual(watchPlugins);
	});
});
